{
  "_from": "sse-nodejs",
  "_id": "sse-nodejs@0.1.0",
  "_inBundle": false,
  "_integrity": "sha512-qBjJfdyy1TOzaezMu+5IYorAaSv21lLb9ICtJTMszemjxmayjRAdROjjAgrQsi2Amat9wj4OedYZGwLETsHlNw==",
  "_location": "/sse-nodejs",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "sse-nodejs",
    "fetchSpec": "latest",
    "name": "sse-nodejs",
    "raw": "sse-nodejs",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sse-nodejs/-/sse-nodejs-0.1.0.tgz",
  "_shasum": "68a23b8f53523ff6d9cfeb3cde3a9cb601f7e6b5",
  "_spec": "sse-nodejs",
  "_where": "/home/plural/MMSApp",
  "author": {
    "email": "trquoccuong@gmail.com",
    "name": "Tran Quoc Cuong"
  },
  "bugs": {
    "url": "https://github.com/trquoccuong/Server-Sent-Events-Nodejs/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Make a server sent events",
  "devDependencies": {},
  "homepage": "https://github.com/trquoccuong/Server-Sent-Events-Nodejs#readme",
  "keywords": [
    "event",
    "sent",
    "server",
    "server sent",
    "sse"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "sse-nodejs",
  "optionalDependencies": {},
  "readme": "# Server-Sent-Events-Nodejs\nMake  Server Sent Events (Node-js)\n\n>Easy to make a server sent events(SSE) with nodejs\n\n## Install\n\n```\n$ npm install sse-nodejs\n```\n\n## How to use\n\nUse with express:\n\n```javascript\nvar SSE = require('sse-nodejs');\n\nvar express = require('express');\n\nvar app = express();\n\napp.get('/', function (req,res) {\n   res.sendFile(__dirname+ '/index.html');\n});\n\napp.get('/time', function (req,res) {\n    var app = SSE(res);\n\n    app.sendEvent('time', function () {\n        return new Date\n    },1000);\n\n    app.disconnect(function () {\n        console.log(\"disconnected\");\n    });\n\n    app.removeEvent('time',3100);\n\n});\n\napp.listen(3000, function () {\n    console.log('Simple SSE server start at port: 3000')\n});\n\n```\n\nUse in frontend\n\n\n```html\n<!DOCTYPE html>\n<html>\n<head></head>\n<body>\nHELLO WORLD\n<div id=\"clock\"></div>\n</body>\n<script>\n    var ev = new EventSource('/time');\n    ev.addEventListener('time', function (result) {\n        document.getElementById(\"clock\").innerHTML += '<h4>' + result.data + '</h4>'\n    })\n</script>\n</html>\n```\n\n## Option\n\n```javascript\n    var app = sse(res, options);\n```\n\n| Option  | Desciption |\n| ------------- | ------------- |\n| padding | add padding 2Kb, default true |\n| heartbeat | send a \"heartbeat\" every 10 seconds. https://bugzilla.mozilla.org/show_bug.cgi?id=444328 |\n| retry | time to retry, default time 3000 |\n| headers | add extra header, default header {\"Content-Type\": \"text/event-stream\",\"Cache-Control\": \"no-cache\", \"Connection\": \"keep-alive\"} |\n\n\n## Function\n\n| Function  | Desciption |\n| ------------- | ------------- |\n| send(data) | send data only (message on server sent events) |\n| sendEvent(name,data,timeInterval) | send data after timeInterval if no timeInterval send once (data can be a function)|\n| removeEvent(nameEvent, timeout) | remove an event after timeout, if no timeout it will remove immediately |\n| disconnect(function) | listen event 'close' |\n\n\n## How to use\n\nYou can use this module with HTTP response object\n\n\n### The MIT License (MIT)\n\nCopyright (c) <2015> Tran Quoc Cuong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/trquoccuong/Server-Sent-Events-Nodejs.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.0"
}
